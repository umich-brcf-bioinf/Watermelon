#!/bin/bash
# Launches snakemake
# 9/27/2016 abhasi/cgates

# config file is required; snakefile is assumed to be rnaseq.snakefile in working dir
# any extra arguments are passed through


# TODO (cgates): allow snakefile or cores to be overridden

export WATERMELON_VERSION=0.1

export SCRIPT_NAME=`basename $0 .sh`
export RUN_TIME=`date +"%Y%m%d_%H%M%S"`
export LOG_DIR=logs/${RUN_TIME}
export LOG_FILE=${LOG_DIR}/${SCRIPT_NAME}.log
export SNAKEFILE=rnaseq.snakefile

SNAKEMAKE_VERSION=$(snakemake --version 2>/dev/null)
if ! [[ $SNAKEMAKE_VERSION ]]; then
  echo "ERROR: snakemake not found; is the python3 module loaded correctly? (contact bfxcore support for assistance)"
  exit 1
fi

set -e #script will fail on any error
set -u #script will fail on any undefined bash variable

function show_usage {
    echo Usage: ${SCRIPT_NAME} {config_file}
    echo Example ${SCRIPT_NAME} ~/my_config.yaml
}

REQUIRED_ARGS=1

if [[ $# -lt $REQUIRED_ARGS ]]; then
    show_usage
    exit 1
fi

export CONFIG_FILE=$1
shift

if [[ ! -f $CONFIG_FILE ]]; then
    echo "ERROR: config file [${CONFIG_FILE}] cannot be read"
    show_usage
    exit 1
fi 

if [[ ! -f $SNAKEFILE ]]; then
    echo "ERROR: snakefile file [${SNAKEFILE}] cannot be read (contact bfxcore support for assistance)"
    exit 1
fi 

export EXTRA_ARGUMENTS=$@

mkdir -p ${LOG_DIR}
cp -a ${SNAKEFILE} ${LOG_DIR}/${SNAKEFILE}.${RUN_TIME}
cp -a ${CONFIG_FILE} ${LOG_DIR}/${CONFIG_FILE}.${RUN_TIME}
echo Logging to ${LOG_FILE}
(
echo 0 > .watermelon.exitcode
echo "watermelon (v${WATERMELON_VERSION}) begins"
set +e

snakemake_command="snakemake --snakefile ${SNAKEFILE} --configfile ${CONFIG_FILE} --cores 40 -T ${EXTRA_ARGUMENTS}"
echo $snakemake_command
eval $snakemake_command
SNAKEMAKE_EXIT=$?

snakemake --snakefile ${SNAKEFILE} --configfile ${CONFIG_FILE} -D > ${LOG_DIR}/watermelon.detailed_summary

printf 'elapsed seconds: %d\n' ${SECONDS}
printf 'elapsed time: %dh:%dm:%ds\n' $((${SECONDS}/3600)) $((${SECONDS}%3600/60)) $((${SECONDS}%60))

if [[ $SNAKEMAKE_EXIT != 0 ]]; then
    echo 'ERROR: Snakemake encountered an unexpected error. Review config and contact bfxcore support.'
    echo ${SNAKEMAKE_EXIT} > .watermelon.exitcode
else
    echo 'watermelon done'
fi

) 2>&1 | tee ${LOG_FILE}

EXIT_CODE=$(cat .watermelon.exitcode)
exit ${EXIT_CODE}